Bluetooth Mesh: (Device) TXP Server
############################


The Bluetooth Mesh TXP sample provides the functionality of changing a node's transmit power (TXP) TXP.
The TXP Client is able to set or get the TXP value on the TXP server(s), and fetching its status, by using the client-side buttons or UART commands. 

Overview
********

This sample contains the following source files:

* A :file:`main.c` file to handle initialization, provisioning and handling Mesh models.

Provisioning
============

Self-provision on boot. 

Models
======

The following table shows the TXP composition data for this sample:

.. table::
   :align: center

   =====================
   Element 1                 
   =====================
   Config Server      
   Health Server
   Mesh TXP Server
   =====================

The models are used for the following purposes:

* Mesh TXP Server controls the TX power value on the development kit.
* Config Server allows configurator devices to configure the node remotely.

The model handling is implemented in :file:`src/main.c`, which uses the :ref:`hci_pwr_ctrl` library,
to control the TX power for the board according to the received messages of TXP Server.

Requirements
************

The sample supports the following development kits:

.. table-from-rows:: /includes/sample_board_rows.txt
   :header: heading
   :rows: nrf52840dk_nrf52840, nrf52dk_nrf52832

User interface
**************

LEDs:
   Indicate the current TXP level of the device


Building and running
********************

.. |sample path| replace:: :file:`samples/bluetooth/mesh/txp_settings_srv`

Testing
=======

After programming the sample to your board, the device is ready to be remote controled by the configured client node. 


Dependencies
************

This sample uses the following |NCS| libraries:

* :ref:`dk_buttons_and_leds_readme`

In addition, it uses the following Zephyr libraries:

* ``include/drivers/hwinfo.h``
* :ref:`zephyr:kernel_api`:

  * ``include/kernel.h``

* :ref:`zephyr:bluetooth_api`:

  * ``include/bluetooth/bluetooth.h``

* :ref:`zephyr:bluetooth_mesh`:

  * ``include/bluetooth/mesh.h``

* :ref:`zephyr:bluetooth_hci`:

  * ``include/bluetooth/hci.h``
  * ``include/bluetooth/hci_vs.h``
  * ``include/bluetooth/conn.h``